{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/InputField.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nclass InputField extends Component {\n  state = {\n    value: '',\n    isIncomplete: false\n  }\n\n  onChangeHandler = event => {\n    const newValue = event.target.value\n    if (newValue.trim() === '') {\n      this.setState({ isIncomplete: true })\n    } else {\n      this.setState({ isIncomplete: false })\n    }\n    this.setState({ value: newValue })\n  }\n\n  render() {\n    const { name = 'inputField', placeholder, addStyle} = this.props\n    const { value, isIncomplete } = this.state\n\n    return (\n      <input\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        style={addStyle}\n        className={\n          isIncomplete\n            ? style.invalidfield\n            : style.inputfield\n        }\n        onChange={this.onChangeHandler}\n        value={value}\n        required\n      />\n    )\n  }\n}\n\nexport default InputField\n\nInputField.proptypes = {\n  name: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  addStyle: PropTypes.object\n}\n"],"names":["InputField","state","onChangeHandler","newValue","event","target","value","trim","setState","isIncomplete","props","name","placeholder","addStyle","style","invalidfield","inputfield","Component","proptypes","PropTypes","string","isRequired","object"],"mappings":";;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC7B,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE5B,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAExD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC5C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAExB,IAAI,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C,MAAM;MACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;GACF,MAAM;IACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GACzB;;EAED,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;GAChC,MAAM;IACL,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpBKA;;;;;;;;;;;;;;6LACJC,QAAQ;aACC,EADD;oBAEQ;aAGhBC,kBAAkB,iBAAS;UACnBC,WAAWC,MAAMC,MAAN,CAAaC,KAA9B;UACIH,SAASI,IAAT,OAAoB,EAAxB,EAA4B;cACrBC,QAAL,CAAc,EAAEC,cAAc,IAAhB,EAAd;OADF,MAEO;cACAD,QAAL,CAAc,EAAEC,cAAc,KAAhB,EAAd;;YAEGD,QAAL,CAAc,EAAEF,OAAOH,QAAT,EAAd;;;;;;6BAGO;mBAC+C,KAAKO,KADpD;+BACCC,IADD;UACCA,IADD,+BACQ,YADR;UACsBC,WADtB,UACsBA,WADtB;UACmCC,QADnC,UACmCA,QADnC;mBAEyB,KAAKZ,KAF9B;UAECK,KAFD,UAECA,KAFD;UAEQG,YAFR,UAEQA,YAFR;;;aAKL;cACO,MADP;cAEQE,IAFR;qBAGeC,WAHf;eAISC,QAJT;mBAMIJ,eACIK,MAAMC,YADV,GAEID,MAAME,UARd;kBAUY,KAAKd,eAVjB;eAWSI,KAXT;;QADF;;;;EApBqBW;;AAyCzBjB,WAAWkB,SAAX,GAAuB;QACfC,UAAUC,MADK;eAERD,UAAUC,MAAV,CAAiBC,UAFT;YAGXF,UAAUG;CAHtB;;;;"}