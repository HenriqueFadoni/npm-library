{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/InputField.js","../src/components/ToggleSwitch.js","../src/components/Alert.js","../src/components/Notice.js","../src/components/Button.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nclass InputField extends Component {\n  state = {\n    value: '',\n    isIncomplete: false\n  }\n\n  onChangeHandler = event => {\n    const newValue = event.target.value\n\n    if (newValue.trim() === '') {\n      this.setState({ isIncomplete: true })\n    } else {\n      this.setState({ isIncomplete: false })\n    }\n\n    this.setState({ value: newValue })\n    this.props.getContent(newValue)\n  }\n\n  render() {\n    const {\n      name = 'inputField',\n      placeholder,\n      addStyle,\n      isRequired = 'false'\n    } = this.props\n    const {\n      value,\n      isIncomplete\n    } = this.state\n\n    if (isRequired) {\n      return (\n        <input\n          type=\"text\"\n          name={name}\n          placeholder={placeholder}\n          style={addStyle}\n          className={\n            isIncomplete\n              ? style.invalidfield\n              : style.inputfield\n          }\n          onChange={this.onChangeHandler}\n          value={value}\n          required\n        />\n      )\n    } else {\n      return (\n        <input\n          type=\"text\"\n          name={name}\n          placeholder={placeholder}\n          style={addStyle}\n          className={style.inputfield}\n          onChange={this.onChangeHandler}\n          value={value}\n        />\n      )\n    }\n  }\n}\n\nexport default InputField\n\nInputField.proptypes = {\n  name: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  addStyle: PropTypes.object,\n  getContent: PropTypes.func.isRequired,\n  isRequired: PropTypes.bool\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nconst ToggleSwitch = props => (\n  <label className={style.switch}>\n    <input\n      type=\"checkbox\"\n      onClick={props.onClickHandler}\n    />\n    <span\n      className={\n        `${style.slider} ${style.round}`\n      }\n    ></span>\n  </label>\n)\n\nexport default ToggleSwitch\n\nToggleSwitch.proptypes = {\n  onClickHandler: PropTypes.func.isRequired\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nclass Alert extends Component {\n  state = {\n    isClosed: false\n  }\n\n  onClickHandler = () => this.setState({ isClosed: true })\n\n  render() {\n    const { isClosed } = this.state\n    const { alertText } = this.props\n\n    return (\n      <div\n        style={\n          isClosed\n            ? { display: \"none\" }\n            : null\n        }\n        className={style.alert}\n      >\n        <div className={style.content}>\n          <h3>{alertText}</h3>\n        </div>\n        <span\n          className={style.closebtn}\n          onClick={this.onClickHandler}\n        >&times;</span>\n      </div>\n    )\n  }\n}\n\nexport default Alert\n\nAlert.proptypes = {\n  alertText: PropTypes.string.isRequired\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nclass Notice extends Component {\n  state = {\n    isClosed: false\n  }\n\n  onClickHandler = () => this.setState({ isClosed: true })\n\n  render() {\n    const { isClosed } = this.state\n    const { noticeText } = this.props\n\n    return (\n      <div\n        style={\n          isClosed\n            ? { display: \"none\" }\n            : null\n        }\n        className={style.notice}\n      >\n        <div className={style.content}>\n          <h3>{noticeText}</h3>\n        </div>\n        <span\n          className={style.closebtn}\n          onClick={this.onClickHandler}\n        >&times;</span>\n      </div>\n    )\n  }\n}\n\nexport default Notice\n\nNotice.proptypes = {\n  noticeText: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport style from '../sass/main.scss'\n\nconst Button = props => {\n  const {\n    btnType = \"button\", \n    btnText, \n    onClickHandler\n  } = props\n\n  return (\n    <button\n      type={btnType}\n      className={style.button}\n      onClick={onClickHandler}\n    >\n      {btnText}\n    </button>\n  )\n}\n\nexport default Button\n\nButton.proptypes = {\n  btnType: PropTypes.string,\n  btnText: PropTypes.string.isRequired,\n  onClickHandler: PropTypes.func.isRequired\n}\n"],"names":["InputField","state","onChangeHandler","newValue","event","target","value","trim","setState","isIncomplete","props","getContent","name","placeholder","addStyle","isRequired","React","style","invalidfield","inputfield","Component","proptypes","PropTypes","string","object","func","bool","ToggleSwitch","switch","onClickHandler","slider","round","Alert","isClosed","alertText","display","alert","content","closebtn","Notice","noticeText","notice","Button","btnType","btnText","button"],"mappings":";;;;;;;;;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC7B,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE5B,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAExD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC5C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAExB,IAAI,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C,MAAM;MACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;GACF,MAAM;IACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GACzB;;EAED,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;GAChC,MAAM;IACL,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpBKA;;;;;;;;;;;;;;6LACJC,QAAQ;aACC,EADD;oBAEQ;aAGhBC,kBAAkB,iBAAS;UACnBC,WAAWC,MAAMC,MAAN,CAAaC,KAA9B;;UAEIH,SAASI,IAAT,OAAoB,EAAxB,EAA4B;cACrBC,QAAL,CAAc,EAAEC,cAAc,IAAhB,EAAd;OADF,MAEO;cACAD,QAAL,CAAc,EAAEC,cAAc,KAAhB,EAAd;;;YAGGD,QAAL,CAAc,EAAEF,OAAOH,QAAT,EAAd;YACKO,KAAL,CAAWC,UAAX,CAAsBR,QAAtB;;;;;;6BAGO;mBAMH,KAAKO,KANF;+BAELE,IAFK;UAELA,IAFK,+BAEE,YAFF;UAGLC,WAHK,UAGLA,WAHK;UAILC,QAJK,UAILA,QAJK;qCAKLC,UALK;UAKLA,UALK,qCAKQ,OALR;mBAUH,KAAKd,KAVF;UAQLK,KARK,UAQLA,KARK;UASLG,YATK,UASLA,YATK;;;UAYHM,UAAJ,EAAgB;eAEZC;gBACO,MADP;gBAEQJ,IAFR;uBAGeC,WAHf;iBAISC,QAJT;qBAMIL,eACIQ,MAAMC,YADV,GAEID,MAAME,UARd;oBAUY,KAAKjB,eAVjB;iBAWSI,KAXT;;UADF;OADF,MAiBO;eAEHU;gBACO,MADP;gBAEQJ,IAFR;uBAGeC,WAHf;iBAISC,QAJT;qBAKaG,MAAME,UALnB;oBAMY,KAAKjB,eANjB;iBAOSI;UARX;;;;;EAjDmBc;;AAkEzBpB,WAAWqB,SAAX,GAAuB;QACfC,UAAUC,MADK;eAERD,UAAUC,MAAV,CAAiBR,UAFT;YAGXO,UAAUE,MAHC;cAITF,UAAUG,IAAV,CAAeV,UAJN;cAKTO,UAAUI;CALxB;;AClEA,IAAMC,eAAe,SAAfA,YAAe;SACnBX;;MAAO,WAAWC,MAAMW,MAAxB;;YAES,UADP;eAEWlB,MAAMmB;MAHnB;;iBAOSZ,MAAMa,MADX,SACqBb,MAAMc;;GARZ;CAArB;;AAgBAJ,aAAaN,SAAb,GAAyB;kBACPC,UAAUG,IAAV,CAAeV;CADjC;;IChBMiB;;;;;;;;;;;;;;mLACJ/B,QAAQ;gBACI;aAGZ4B,iBAAiB;aAAM,MAAKrB,QAAL,CAAc,EAAEyB,UAAU,IAAZ,EAAd,CAAN;;;;;;6BAER;UACCA,QADD,GACc,KAAKhC,KADnB,CACCgC,QADD;UAECC,SAFD,GAEe,KAAKxB,KAFpB,CAECwB,SAFD;;;aAKLlB;;;iBAEIiB,WACI,EAAEE,SAAS,MAAX,EADJ,GAEI,IAJR;qBAMalB,MAAMmB;;;;YAEZ,WAAWnB,MAAMoB,OAAtB;;;;;;SARF;;;;uBAYepB,MAAMqB,QADnB;qBAEW,KAAKT;;;;OAdpB;;;;EAXgBT;;AAkCpBY,MAAMX,SAAN,GAAkB;aACLC,UAAUC,MAAV,CAAiBR;CAD9B;;IClCMwB;;;;;;;;;;;;;;qLACJtC,QAAQ;gBACI;aAGZ4B,iBAAiB;aAAM,MAAKrB,QAAL,CAAc,EAAEyB,UAAU,IAAZ,EAAd,CAAN;;;;;;6BAER;UACCA,QADD,GACc,KAAKhC,KADnB,CACCgC,QADD;UAECO,UAFD,GAEgB,KAAK9B,KAFrB,CAEC8B,UAFD;;;aAKLxB;;;iBAEIiB,WACI,EAAEE,SAAS,MAAX,EADJ,GAEI,IAJR;qBAMalB,MAAMwB;;;;YAEZ,WAAWxB,MAAMoB,OAAtB;;;;;;SARF;;;;uBAYepB,MAAMqB,QADnB;qBAEW,KAAKT;;;;OAdpB;;;;EAXiBT;;AAkCrBmB,OAAOlB,SAAP,GAAmB;cACLC,UAAUC,MAAV,CAAiBR;CAD/B;;AClCA,IAAM2B,SAAS,SAATA,MAAS,QAAS;uBAKlBhC,KALkB,CAEpBiC,OAFoB;MAEpBA,OAFoB,kCAEV,QAFU;MAGpBC,OAHoB,GAKlBlC,KALkB,CAGpBkC,OAHoB;MAIpBf,cAJoB,GAKlBnB,KALkB,CAIpBmB,cAJoB;;;SAQpBb;;;YACQ2B,OADR;iBAEa1B,MAAM4B,MAFnB;eAGWhB;;;GAJb;CAPF;;AAoBAa,OAAOrB,SAAP,GAAmB;WACRC,UAAUC,MADF;WAERD,UAAUC,MAAV,CAAiBR,UAFT;kBAGDO,UAAUG,IAAV,CAAeV;CAHjC;;;;;;;;"}